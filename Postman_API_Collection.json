{
	"info": {
		"_postman_id": "a84c3447-59a4-44f8-8f2d-398163073cc6",
		"name": "PoolParty_APIS",
		"description": "## PoolParty APIs Postman collection\n\nNote that the current APIs use Basic Aut. If you want to use Oauth2 token for authentication, please refer to PoolParty official documentation for how to retrieve the token and embed as Bearer token [Source.](https://help.poolparty.biz/en/developer-guide/general-information-on-the-poolparty-api/api-authorization-using-oauth-2-0.html)\n\nFor questions, suggestions and error report, please contact me by raising a github issue\n\n## Environment Variables\n\n`username` - your pool party login username\n\n`password` - your pool party login password\n\n`server_url` - server url\n\n`project_id` - project UUID",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36559822"
	},
	"item": [
		{
			"name": "System Services",
			"item": [
				{
					"name": "Get PoolParty Version",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server_url}}/PoolParty/api/version",
							"host": [
								"{{server_url}}"
							],
							"path": [
								"PoolParty",
								"api",
								"version"
							]
						},
						"description": "Returns the version number of the PoolParty Thesaurus Server. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/system-services/web-service-method--get-poolparty-version.html)"
					},
					"response": []
				},
				{
					"name": "Get Remote System's Configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server_url}}/PoolParty/api/remote",
							"host": [
								"{{server_url}}"
							],
							"path": [
								"PoolParty",
								"api",
								"remote"
							]
						},
						"description": "Retrieves information about the system configuration defined in the [Semantic Middleware Configurator](https://help.poolparty.biz/en/user-guide-for-knowledge-engineers/enterprise-features/semantic-middleware-configurator---overview.html) and provides details about the status of connected systems. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/system-services/web-service-method--get-remote-systems--configuration.html)"
					},
					"response": []
				},
				{
					"name": "Get Running Tasks of a System",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server_url}}/PoolParty/api/runningTasks",
							"host": [
								"{{server_url}}"
							],
							"path": [
								"PoolParty",
								"api",
								"runningTasks"
							]
						},
						"description": "Returns the tasks that are currently run by the system. A monitoring service that allows the client to retrieve information about the status of long running tasks which are performed by the system. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/system-services/web-service-method--get-running-tasks-of-a-system.html)"
					},
					"response": []
				},
				{
					"name": "Get PoolParty License",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server_url}}/PoolParty/api/license",
							"host": [
								"{{server_url}}"
							],
							"path": [
								"PoolParty",
								"api",
								"license"
							]
						},
						"description": "Returns details about the license of this PoolParty installation. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/system-services/web-service-method--get-poolparty-license.html)"
					},
					"response": []
				},
				{
					"name": "Get Remote Systems' Spark Cluster Configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server_url}}/PoolParty/remote/systems/spark",
							"host": [
								"{{server_url}}"
							],
							"path": [
								"PoolParty",
								"remote",
								"systems",
								"spark"
							]
						},
						"description": "Retrieves information about the global Spark cluster configuration defined in the [Semantic Middleware Configurator](https://help.poolparty.biz/en/user-guide-for-knowledge-engineers/enterprise-features/semantic-middleware-configurator---overview.html). [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/system-services/web-service-method--get-remote-systems--spark-cluster-configuration.html)"
					},
					"response": []
				}
			],
			"description": "Find details on services that provide general information about the overall system. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/system-services.html)\n\nStatus - Complete"
		},
		{
			"name": "Project Services",
			"item": [
				{
					"name": "Get Available Projects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server_url}}/PoolParty/api/projects",
							"host": [
								"{{server_url}}"
							],
							"path": [
								"PoolParty",
								"api",
								"projects"
							]
						},
						"description": "Returns a list of projects that are available on the server and that are accessible for the user. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/project-services/web-service-method--get-available-projects.html)"
					},
					"response": []
				}
			],
			"description": "Services that allow you to manage project data. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/project-services.html)\n\nStatus - Incomplete"
		},
		{
			"name": "Thesaurus Services",
			"item": [
				{
					"name": "Concept Management Services",
					"item": [
						{
							"name": "Create New Concept",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "parent",
											"value": "",
											"description": "URI of the concept / concept scheme that should be parent String Required",
											"type": "text"
										},
										{
											"key": "prefLabel",
											"value": "",
											"description": "Preferred label in the default language for the newly created concept String Required",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/createConcept",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"createConcept"
									]
								},
								"description": "Creates a new SKOS concept in your thesaurus. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-management-services/web-service-method--create-new-concept.html)"
							},
							"response": [
								{
									"name": "Create New Concept",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "parent",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/803",
													"description": "URI of the concept / concept scheme that should be parent String Required",
													"type": "text"
												},
												{
													"key": "prefLabel",
													"value": "TestConcept1",
													"description": "Preferred label in the default language for the newly created concept String Required",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/createConcept",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"createConcept"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 00:05:33 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "\"http://example.com/appf_this_part_changes_with_each_scheme/804\""
								}
							]
						},
						{
							"name": "Request a Concept's Details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/concept?concept=&properties=",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"concept"
									],
									"query": [
										{
											"key": "concept",
											"value": "",
											"description": "URI of the concept - Required"
										},
										{
											"key": "properties",
											"value": "",
											"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests.\n\nSet to all to fetch all properties."
										},
										{
											"key": "language",
											"value": null,
											"description": "Only concept with label in specified language will be displayed. If no language is given, the default language of the project will be used.",
											"disabled": true
										},
										{
											"key": "workflowStatus",
											"value": null,
											"description": "Set to true in case a workflow is applied and the workflow status should be retrieved.\n\n(Default value: false.)\n\nSee details: Using Workflow Status Information",
											"disabled": true
										}
									]
								},
								"description": "Returns details of a single concept. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-management-services/web-service-method--request-a-concept-s-details.html)"
							},
							"response": [
								{
									"name": "Concept - All Properties",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/concept?concept=http://example.com/appf_methods/763&properties=all",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"concept"
											],
											"query": [
												{
													"key": "concept",
													"value": "http://example.com/appf_methods/763",
													"description": "URI of the concept - Required"
												},
												{
													"key": "properties",
													"value": "all",
													"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests.\n\nSet to all to fetch all properties."
												},
												{
													"key": "language",
													"value": null,
													"description": "Only concept with label in specified language will be displayed. If no language is given, the default language of the project will be used.",
													"disabled": true
												},
												{
													"key": "workflowStatus",
													"value": null,
													"description": "Set to true in case a workflow is applied and the workflow status should be retrieved.\n\n(Default value: false.)\n\nSee details: Using Workflow Status Information",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 00:07:04 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"uri\": \"http://example.com/appf_methods/763\",\n    \"prefLabel\": \"absolute PSA growth  rates_computation\",\n    \"definitions\": [\n        \"The absolute PSA growth rates were calculated by differencing consecutive PSA values, and dividing by the time differences. (cross-reference traits - PSA 'Projected Shoot Area [Trait ID])\"\n    ],\n    \"notations\": [\n        \"UoA\"\n    ],\n    \"broaders\": [\n        \"http://example.com/appf_methods/710\"\n    ],\n    \"conceptSchemes\": [],\n    \"inSchemes\": [\n        \"http://example.com/appf_methods/1\"\n    ],\n    \"properties\": {\n        \"http://purl.org/dc/terms/creator\": [\n            \"http://editor.vocabs.ardc.edu.au/user/APPF_Andres.Hernandez.Liliana\"\n        ],\n        \"http://purl.org/dc/terms/created\": [\n            \"2024-06-13T03:54:03.094Z\"\n        ],\n        \"http://purl.org/dc/terms/modified\": [\n            \"2024-07-18T23:26:00.430Z\"\n        ],\n        \"http://purl.org/dc/terms/contributor\": [\n            \"http://editor.vocabs.ands.org.au/user/rowanAdminSuper\"\n        ],\n        \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": [\n            \"http://www.w3.org/2004/02/skos/core#Concept\"\n        ]\n    }\n}"
								},
								{
									"name": "Concept - Selected Properties",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/concept?concept=http://example.com/appf_methods/763&properties=skos:prefLabel,skos:notation,skos:definition",
											"host": [
												"{{server_url}}"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"{{project_id}}",
												"concept"
											],
											"query": [
												{
													"key": "concept",
													"value": "http://example.com/appf_methods/763",
													"description": "URI of the concept - Required"
												},
												{
													"key": "properties",
													"value": "skos:prefLabel,skos:notation,skos:definition",
													"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests.\n\nSet to all to fetch all properties."
												},
												{
													"key": "language",
													"value": null,
													"description": "Only concept with label in specified language will be displayed. If no language is given, the default language of the project will be used.",
													"disabled": true
												},
												{
													"key": "workflowStatus",
													"value": null,
													"description": "Set to true in case a workflow is applied and the workflow status should be retrieved.\n\n(Default value: false.)\n\nSee details: Using Workflow Status Information",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 00:08:50 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"uri\": \"http://example.com/appf_methods/763\",\n    \"prefLabel\": \"absolute PSA growth  rates_computation\",\n    \"definitions\": [\n        \"The absolute PSA growth rates were calculated by differencing consecutive PSA values, and dividing by the time differences. (cross-reference traits - PSA 'Projected Shoot Area [Trait ID])\"\n    ],\n    \"notations\": [\n        \"UoA\"\n    ],\n    \"properties\": {}\n}"
								}
							]
						},
						{
							"name": "Request a Concept's Status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/conceptStatus?concept=",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"conceptStatus"
									],
									"query": [
										{
											"key": "concept",
											"value": "",
											"description": "URI of the concept - required"
										}
									]
								},
								"description": "Returns the status of a concept. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-management-services/web-service-method--request-a-concept-s-status.html)\n\nThe possible status values are: SUGGESTED, REGULAR, MERGED or DELETED."
							},
							"response": [
								{
									"name": "Request a Concept Status",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/conceptStatus?concept=http://example.com/appf_methods/763",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"conceptStatus"
											],
											"query": [
												{
													"key": "concept",
													"value": "http://example.com/appf_methods/763",
													"description": "URI of the concept - required"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 00:10:54 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "\"REGULAR\""
								}
							]
						},
						{
							"name": "Request Details of Multiple Concepts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/concepts?concepts=",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"concepts"
									],
									"query": [
										{
											"key": "concepts",
											"value": "",
											"description": "URI of the concept String Required"
										},
										{
											"key": "properties",
											"value": "",
											"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader. String Optional",
											"disabled": true
										},
										{
											"key": "language",
											"value": null,
											"description": "Only concepts with labels in this language will be displayed. If no language is given, the default language of the project will be used.",
											"disabled": true
										},
										{
											"key": "workflowStatus",
											"value": null,
											"description": "Set to true in case a workflow is applied and workflow status should be retrieved. Default is false. See details: Using Workflow Status Information",
											"disabled": true
										}
									]
								},
								"description": "Returns a description of one or more concepts. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-management-services/web-service-method--request-details-of-multiple-concepts.html)"
							},
							"response": [
								{
									"name": "One Concept",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/concepts?concepts=http://example.com/appf_methods/763&properties=all",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"concepts"
											],
											"query": [
												{
													"key": "concepts",
													"value": "http://example.com/appf_methods/763",
													"description": "URI of the concept String Required"
												},
												{
													"key": "properties",
													"value": "all",
													"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader. String Optional"
												},
												{
													"key": "language",
													"value": null,
													"description": "Only concepts with labels in this language will be displayed. If no language is given, the default language of the project will be used.",
													"disabled": true
												},
												{
													"key": "workflowStatus",
													"value": null,
													"description": "Set to true in case a workflow is applied and workflow status should be retrieved. Default is false. See details: Using Workflow Status Information",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 00:11:53 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"uri\": \"http://example.com/appf_methods/763\",\n        \"prefLabel\": \"absolute PSA growth  rates_computation\",\n        \"definitions\": [\n            \"The absolute PSA growth rates were calculated by differencing consecutive PSA values, and dividing by the time differences. (cross-reference traits - PSA 'Projected Shoot Area [Trait ID])\"\n        ],\n        \"notations\": [\n            \"UoA\"\n        ],\n        \"broaders\": [\n            \"http://example.com/appf_methods/710\"\n        ],\n        \"conceptSchemes\": [],\n        \"inSchemes\": [\n            \"http://example.com/appf_methods/1\"\n        ],\n        \"properties\": {\n            \"http://purl.org/dc/terms/creator\": [\n                \"http://editor.vocabs.ardc.edu.au/user/APPF_Andres.Hernandez.Liliana\"\n            ],\n            \"http://purl.org/dc/terms/created\": [\n                \"2024-06-13T03:54:03.094Z\"\n            ],\n            \"http://purl.org/dc/terms/modified\": [\n                \"2024-07-18T23:26:00.430Z\"\n            ],\n            \"http://purl.org/dc/terms/contributor\": [\n                \"http://editor.vocabs.ands.org.au/user/rowanAdminSuper\"\n            ],\n            \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": [\n                \"http://www.w3.org/2004/02/skos/core#Concept\"\n            ]\n        }\n    }\n]"
								},
								{
									"name": "Multiple Concepts",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/concepts?concepts=http://example.com/appf_methods/763,http://example.com/appf_methods/772&properties=all",
											"host": [
												"{{server_url}}"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"{{project_id}}",
												"concepts"
											],
											"query": [
												{
													"key": "concepts",
													"value": "http://example.com/appf_methods/763,http://example.com/appf_methods/772",
													"description": "URI of the concept String Required"
												},
												{
													"key": "properties",
													"value": "all",
													"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader. String Optional"
												},
												{
													"key": "language",
													"value": null,
													"description": "Only concepts with labels in this language will be displayed. If no language is given, the default language of the project will be used.",
													"disabled": true
												},
												{
													"key": "workflowStatus",
													"value": null,
													"description": "Set to true in case a workflow is applied and workflow status should be retrieved. Default is false. See details: Using Workflow Status Information",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 00:12:14 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"uri\": \"http://example.com/appf_methods/763\",\n        \"prefLabel\": \"absolute PSA growth  rates_computation\",\n        \"definitions\": [\n            \"The absolute PSA growth rates were calculated by differencing consecutive PSA values, and dividing by the time differences. (cross-reference traits - PSA 'Projected Shoot Area [Trait ID])\"\n        ],\n        \"notations\": [\n            \"UoA\"\n        ],\n        \"broaders\": [\n            \"http://example.com/appf_methods/710\"\n        ],\n        \"conceptSchemes\": [],\n        \"inSchemes\": [\n            \"http://example.com/appf_methods/1\"\n        ],\n        \"properties\": {\n            \"http://purl.org/dc/terms/creator\": [\n                \"http://editor.vocabs.ardc.edu.au/user/APPF_Andres.Hernandez.Liliana\"\n            ],\n            \"http://purl.org/dc/terms/created\": [\n                \"2024-06-13T03:54:03.094Z\"\n            ],\n            \"http://purl.org/dc/terms/modified\": [\n                \"2024-07-18T23:26:00.430Z\"\n            ],\n            \"http://purl.org/dc/terms/contributor\": [\n                \"http://editor.vocabs.ands.org.au/user/rowanAdminSuper\"\n            ],\n            \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": [\n                \"http://www.w3.org/2004/02/skos/core#Concept\"\n            ]\n        }\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/772\",\n        \"prefLabel\": \"absolute PSA growth rates for a single time point_computation\",\n        \"definitions\": [\n            \"The absolute PSA growth rates were calculated by differencing consecutive PSA values, and dividing by the time differences. (cross-reference traits - sPSA 'smoothed Projected Shoot Area [Trait ID])\"\n        ],\n        \"notations\": [\n            \"UoA\"\n        ],\n        \"broaders\": [\n            \"http://example.com/appf_methods/710\"\n        ],\n        \"conceptSchemes\": [],\n        \"inSchemes\": [\n            \"http://example.com/appf_methods/1\"\n        ],\n        \"properties\": {\n            \"http://purl.org/dc/terms/creator\": [\n                \"http://editor.vocabs.ardc.edu.au/user/APPF_Andres.Hernandez.Liliana\"\n            ],\n            \"http://purl.org/dc/terms/created\": [\n                \"2024-06-13T03:54:03.398Z\"\n            ],\n            \"http://purl.org/dc/terms/modified\": [\n                \"2024-07-18T23:26:01.456Z\"\n            ],\n            \"http://purl.org/dc/terms/contributor\": [\n                \"http://editor.vocabs.ands.org.au/user/rowanAdminSuper\"\n            ],\n            \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\": [\n                \"http://www.w3.org/2004/02/skos/core#Concept\"\n            ]\n        }\n    }\n]"
								}
							]
						},
						{
							"name": "Add Literal to a Concept or Concept Scheme",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "resource",
											"value": "",
											"description": "URI of the resource. String Required",
											"type": "text"
										},
										{
											"key": "label",
											"value": "",
											"description": "The value for the RDF literal that should be added. String Optional",
											"type": "text"
										},
										{
											"key": "language",
											"value": "",
											"description": "The language of the literal - default language if not defined. String Optional",
											"type": "text",
											"disabled": true
										},
										{
											"key": "property",
											"value": "",
											"description": "The type of skos label.\n\nPossible values for concepts: skos:prefLabel, skos:altLabel, skos:hiddenLabel, skos:definition, skos:notation, skos:example, skos:scopeNote\n\nPossible values for concept schemes: dct:title, dct:subject, dct:description, dct:publisher, dct:contributor, dct:creator\n\nSee full list of Retrieve Properties in API Requests. String Required",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/addLiteral",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"addLiteral"
									]
								},
								"description": "Adds a SKOS literal to a concept or concept scheme. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-management-services/web-service-method--add-literal-to-a-concept-or-concept-scheme.html)"
							},
							"response": [
								{
									"name": "Add alternative label literal to a concept",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "resource",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/804",
													"description": "URI of the resource. String Required",
													"type": "text"
												},
												{
													"key": "label",
													"value": "Hoang's Test Concept 1",
													"description": "The value for the RDF literal that should be added. String Optional",
													"type": "text"
												},
												{
													"key": "language",
													"value": "",
													"description": "The language of the literal - default language if not defined. String Optional",
													"type": "text",
													"disabled": true
												},
												{
													"key": "property",
													"value": "skos:altLabel",
													"description": "The type of skos label.\n\nPossible values for concepts: skos:prefLabel, skos:altLabel, skos:hiddenLabel, skos:definition, skos:notation, skos:example, skos:scopeNote\n\nPossible values for concept schemes: dct:title, dct:subject, dct:description, dct:publisher, dct:contributor, dct:creator\n\nSee full list of Retrieve Properties in API Requests. String Required",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/addLiteral",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"addLiteral"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 00:18:34 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Update Literal of a Concept or Concept Scheme",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "resource",
											"value": "",
											"description": "URI of the Resource String Required",
											"type": "text"
										},
										{
											"key": "newLabel",
											"value": "",
											"description": "The new value for the RDF literal String Required",
											"type": "text"
										},
										{
											"key": "oldLabel",
											"value": "",
											"description": "The outdated value of the RDF literal String Required",
											"type": "text"
										},
										{
											"key": "language",
											"value": "",
											"description": "The language of the literal - default language if not defined String Optional",
											"type": "text",
											"disabled": true
										},
										{
											"key": "property",
											"value": "",
											"description": "The type of skos label.\n\nPossible values for concepts: skos:prefLabel, skos:altLabel, skos:hiddenLabel, skos:definition, skos:notation, skos:example, skos:scopeNote\n\nPossible values for concept schemes: dct:title, dct:subject, dct:description, dct:publisher, dct:contributor, dct:creator\n\nSee full list of Retrieve Properties in API Requests. String Required",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/updateLiteral",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"updateLiteral"
									]
								},
								"description": "Updates a SKOS literal of a concept or concept scheme. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-management-services/web-service-method--update-literal-of-a-concept-or-concept-scheme.html)"
							},
							"response": [
								{
									"name": "Update alternative label literal to a concept",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "resource",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/804",
													"description": "URI of the Resource String Required",
													"type": "text"
												},
												{
													"key": "newLabel",
													"value": "Hoang's Test Concept 1 Alt Label",
													"description": "The new value for the RDF literal String Required",
													"type": "text"
												},
												{
													"key": "oldLabel",
													"value": "Hoang's Test Concept 1",
													"description": "The outdated value of the RDF literal String Required",
													"type": "text"
												},
												{
													"key": "language",
													"value": "",
													"description": "The language of the literal - default language if not defined String Optional",
													"type": "text",
													"disabled": true
												},
												{
													"key": "property",
													"value": "skos:altLabel",
													"description": "The type of skos label.\n\nPossible values for concepts: skos:prefLabel, skos:altLabel, skos:hiddenLabel, skos:definition, skos:notation, skos:example, skos:scopeNote\n\nPossible values for concept schemes: dct:title, dct:subject, dct:description, dct:publisher, dct:contributor, dct:creator\n\nSee full list of Retrieve Properties in API Requests. String Required",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/updateLiteral",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"updateLiteral"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 00:24:39 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Remove a Literal from a Concept or Concept Scheme",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "resource",
											"value": "",
											"description": "URI of the resource String Required",
											"type": "text"
										},
										{
											"key": "label",
											"value": "",
											"description": "The value for the RFD literal that should be remove String Required",
											"type": "text"
										},
										{
											"key": "language",
											"value": "",
											"description": "The language of the literal - default language if not defined - String Optional",
											"type": "text",
											"disabled": true
										},
										{
											"key": "property",
											"value": "",
											"description": "The type of skos label.\n\nPossible values for concepts: skos:prefLabel, skos:altLabel, skos:hiddenLabel, skos:definition, skos:notation, skos:example, skos:scopeNote\n\nPossible values for concept schemes: dct:title, dct:subject, dct:description, dct:publisher, dct:contributor, dct:creator\n\nSee full list of Retrieve Properties in API Requests.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/removeLiteral",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"removeLiteral"
									]
								},
								"description": "Removes the literal from a concept or concept scheme. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-management-services/web-service-method--remove-a-literal-from-a-concept-or-concept-scheme.html)"
							},
							"response": [
								{
									"name": "Remove alternative label literal from a concept",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "resource",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/804",
													"description": "URI of the resource String Required",
													"type": "text"
												},
												{
													"key": "label",
													"value": "Hoang's Test Concept 1 Alt Label",
													"description": "The value for the RFD literal that should be remove String Required",
													"type": "text"
												},
												{
													"key": "language",
													"value": "",
													"description": "The language of the literal - default language if not defined - String Optional",
													"type": "text",
													"disabled": true
												},
												{
													"key": "property",
													"value": "skos:altLabel",
													"description": "The type of skos label.\n\nPossible values for concepts: skos:prefLabel, skos:altLabel, skos:hiddenLabel, skos:definition, skos:notation, skos:example, skos:scopeNote\n\nPossible values for concept schemes: dct:title, dct:subject, dct:description, dct:publisher, dct:contributor, dct:creator\n\nSee full list of Retrieve Properties in API Requests.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/removeLiteral",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"removeLiteral"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 00:28:54 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Request Broader Concepts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/broaders?concept=",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"broaders"
									],
									"query": [
										{
											"key": "concept",
											"value": "",
											"description": "URI of the Concept String Required"
										},
										{
											"key": "properties",
											"value": "",
											"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests. String Optional",
											"disabled": true
										},
										{
											"key": "language",
											"value": null,
											"description": "Only broader concepts with labels in this language will be displayed. If no language is given, the default language of the project will be used. String Optional",
											"disabled": true
										},
										{
											"key": "transitive",
											"value": "",
											"description": "If true, all transitive broader concepts are returned instead of only direct broader concepts. boolean Optional",
											"disabled": true
										},
										{
											"key": "workflowStatus",
											"value": null,
											"description": "Set to true in case a workflow is applied and workflow status should be retrieved. Default is false. See details: Using Workflow Status Information boolean Optional",
											"disabled": true
										}
									]
								},
								"description": "Returns a list of direct broader concepts of the given concept [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-management-services/web-service-method--request-broader-concepts.html)"
							},
							"response": [
								{
									"name": "No Transitive",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/broaders?concept=http://example.com/appf_this_part_changes_with_each_scheme/806&transitive=false",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"broaders"
											],
											"query": [
												{
													"key": "concept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/806",
													"description": "URI of the Concept String Required"
												},
												{
													"key": "properties",
													"value": "all",
													"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests. String Optional",
													"disabled": true
												},
												{
													"key": "language",
													"value": null,
													"description": "Only broader concepts with labels in this language will be displayed. If no language is given, the default language of the project will be used. String Optional",
													"disabled": true
												},
												{
													"key": "transitive",
													"value": "false",
													"description": "If true, all transitive broader concepts are returned instead of only direct broader concepts. boolean Optional"
												},
												{
													"key": "workflowStatus",
													"value": null,
													"description": "Set to true in case a workflow is applied and workflow status should be retrieved. Default is false. See details: Using Workflow Status Information boolean Optional",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 01:54:21 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"uri\": \"http://example.com/appf_this_part_changes_with_each_scheme/805\",\n        \"prefLabel\": \"TestConcep1tNarrowerConcept1\"\n    }\n]"
								},
								{
									"name": "With Transitive",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/broaders?concept=http://example.com/appf_this_part_changes_with_each_scheme/806&transitive=true",
											"host": [
												"{{server_url}}"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"{{project_id}}",
												"broaders"
											],
											"query": [
												{
													"key": "concept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/806",
													"description": "URI of the Concept String Required"
												},
												{
													"key": "properties",
													"value": "all",
													"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests. String Optional",
													"disabled": true
												},
												{
													"key": "language",
													"value": null,
													"description": "Only broader concepts with labels in this language will be displayed. If no language is given, the default language of the project will be used. String Optional",
													"disabled": true
												},
												{
													"key": "transitive",
													"value": "true",
													"description": "If true, all transitive broader concepts are returned instead of only direct broader concepts. boolean Optional"
												},
												{
													"key": "workflowStatus",
													"value": null,
													"description": "Set to true in case a workflow is applied and workflow status should be retrieved. Default is false. See details: Using Workflow Status Information boolean Optional",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 01:55:09 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"uri\": \"http://example.com/appf_this_part_changes_with_each_scheme/804\",\n        \"prefLabel\": \"TestConcept1\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_this_part_changes_with_each_scheme/805\",\n        \"prefLabel\": \"TestConcep1tNarrowerConcept1\"\n    }\n]"
								}
							]
						},
						{
							"name": "Request Narrower Concepts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/narrowers?concept=",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"narrowers"
									],
									"query": [
										{
											"key": "concept",
											"value": "",
											"description": "URI of the Concept String Required"
										},
										{
											"key": "properties",
											"value": "",
											"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests. String Optional",
											"disabled": true
										},
										{
											"key": "language",
											"value": "",
											"description": "Only broader concepts with labels in this language will be displayed. If no language is given, the default language of the project will be used. String Optional",
											"disabled": true
										},
										{
											"key": "transitive",
											"value": "",
											"description": "If true, all transitive narrower concepts are returned instead of only direct narrower concepts. boolean Optional",
											"disabled": true
										},
										{
											"key": "workflowStatus",
											"value": "",
											"description": "Set to true in case a workflow is applied and workflow status should be retrieved. Default is false. See details: Using Workflow Status Information boolean Optional",
											"disabled": true
										}
									]
								},
								"description": "Returns a list of direct narrower concepts of the given concept [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-management-services/web-service-method--request-narrower-concepts.html)"
							},
							"response": [
								{
									"name": "No Transitive",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/narrowers?concept=http://example.com/appf_this_part_changes_with_each_scheme/804&transitive=false",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"narrowers"
											],
											"query": [
												{
													"key": "concept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/804",
													"description": "URI of the Concept String Required"
												},
												{
													"key": "properties",
													"value": "",
													"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests. String Optional",
													"disabled": true
												},
												{
													"key": "language",
													"value": "",
													"description": "Only broader concepts with labels in this language will be displayed. If no language is given, the default language of the project will be used. String Optional",
													"disabled": true
												},
												{
													"key": "transitive",
													"value": "false",
													"description": "If true, all transitive narrower concepts are returned instead of only direct narrower concepts. boolean Optional"
												},
												{
													"key": "workflowStatus",
													"value": "",
													"description": "Set to true in case a workflow is applied and workflow status should be retrieved. Default is false. See details: Using Workflow Status Information boolean Optional",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 01:56:36 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"uri\": \"http://example.com/appf_this_part_changes_with_each_scheme/805\",\n        \"prefLabel\": \"TestConcep1tNarrowerConcept1\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_this_part_changes_with_each_scheme/806\",\n        \"prefLabel\": \"TestConcept1NarrowerNarrowerConcept1\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_this_part_changes_with_each_scheme/807\",\n        \"prefLabel\": \"TestConceptNarrowerConcept2\"\n    }\n]"
								},
								{
									"name": "With Transitive",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/narrowers?concept=http://example.com/appf_this_part_changes_with_each_scheme/804&transitive=true",
											"host": [
												"{{server_url}}"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"{{project_id}}",
												"narrowers"
											],
											"query": [
												{
													"key": "concept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/804",
													"description": "URI of the Concept String Required"
												},
												{
													"key": "properties",
													"value": "",
													"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests. String Optional",
													"disabled": true
												},
												{
													"key": "language",
													"value": "",
													"description": "Only broader concepts with labels in this language will be displayed. If no language is given, the default language of the project will be used. String Optional",
													"disabled": true
												},
												{
													"key": "transitive",
													"value": "true",
													"description": "If true, all transitive narrower concepts are returned instead of only direct narrower concepts. boolean Optional"
												},
												{
													"key": "workflowStatus",
													"value": "",
													"description": "Set to true in case a workflow is applied and workflow status should be retrieved. Default is false. See details: Using Workflow Status Information boolean Optional",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 01:57:37 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"uri\": \"http://example.com/appf_this_part_changes_with_each_scheme/805\",\n        \"prefLabel\": \"TestConcep1tNarrowerConcept1\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_this_part_changes_with_each_scheme/806\",\n        \"prefLabel\": \"TestConcept1NarrowerNarrowerConcept1\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_this_part_changes_with_each_scheme/807\",\n        \"prefLabel\": \"TestConceptNarrowerConcept2\"\n    }\n]"
								}
							]
						},
						{
							"name": "Request Related Concepts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/relateds?concept=",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"relateds"
									],
									"query": [
										{
											"key": "concept",
											"value": "",
											"description": "URI of the Concept String Required"
										},
										{
											"key": "properties",
											"value": "",
											"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests. String Optional",
											"disabled": true
										},
										{
											"key": "language",
											"value": "",
											"description": "Only broader concepts with labels in this language will be displayed. If no language is given, the default language of the project will be used. String Optional",
											"disabled": true
										},
										{
											"key": "transitive",
											"value": "",
											"description": "If true, all transitive related concepts are returned instead of only direct related concepts.",
											"disabled": true
										},
										{
											"key": "workflowStatus",
											"value": "",
											"description": "Set to true in case a workflow is applied and workflow status should be retrieved. Default is false. See details: Using Workflow Status Information boolean Optional",
											"disabled": true
										}
									]
								},
								"description": "Return a list of related concepts for a given concept [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-management-services/web-service-method--request-related-concepts.html)"
							},
							"response": [
								{
									"name": "Request Related Concepts",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/relateds?concept=http://example.com/appf_this_part_changes_with_each_scheme/807",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"relateds"
											],
											"query": [
												{
													"key": "concept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/807",
													"description": "URI of the Concept String Required"
												},
												{
													"key": "properties",
													"value": "",
													"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests. String Optional",
													"disabled": true
												},
												{
													"key": "language",
													"value": "",
													"description": "Only broader concepts with labels in this language will be displayed. If no language is given, the default language of the project will be used. String Optional",
													"disabled": true
												},
												{
													"key": "transitive",
													"value": "",
													"description": "If true, all transitive related concepts are returned instead of only direct related concepts.",
													"disabled": true
												},
												{
													"key": "workflowStatus",
													"value": "",
													"description": "Set to true in case a workflow is applied and workflow status should be retrieved. Default is false. See details: Using Workflow Status Information boolean Optional",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 02:25:03 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"uri\": \"http://example.com/appf_this_part_changes_with_each_scheme/805\",\n        \"prefLabel\": \"TestConcep1tNarrowerConcept1\"\n    }\n]"
								}
							]
						},
						{
							"name": "Add Relation Between Two Concepts",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "sourceConcept",
											"value": "",
											"description": "URI of the source Concept",
											"type": "text"
										},
										{
											"key": "targetConcept",
											"value": "",
											"description": "URI of the target Concept",
											"type": "text"
										},
										{
											"key": "property",
											"value": "",
											"description": "The relation type. E.g. you can choose a property like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/addRelation",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"addRelation"
									]
								},
								"description": "Add a SKOS relation between two concepts [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-management-services/web-service-method--add-relation-between-two-concepts.html)"
							},
							"response": [
								{
									"name": "Make Related Concepts",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "sourceConcept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/807",
													"description": "URI of the source Concept",
													"type": "text"
												},
												{
													"key": "targetConcept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/805",
													"description": "URI of the target Concept",
													"type": "text"
												},
												{
													"key": "property",
													"value": "skos:related",
													"description": "The relation type. E.g. you can choose a property like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/addRelation",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"addRelation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 02:21:18 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										}
									],
									"cookie": [],
									"body": null
								},
								{
									"name": "Make Narrower Concepts",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "sourceConcept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/807",
													"description": "URI of the source Concept",
													"type": "text"
												},
												{
													"key": "targetConcept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/806",
													"description": "URI of the target Concept",
													"type": "text"
												},
												{
													"key": "property",
													"value": "skos:narrower",
													"description": "The relation type. E.g. you can choose a property like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/addRelation",
											"host": [
												"{{server_url}}"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"{{project_id}}",
												"addRelation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 02:22:29 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Remove Relation Between Two Concepts",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "sourceConcept",
											"value": "",
											"description": "URI of the source Concept",
											"type": "text"
										},
										{
											"key": "targetConcept",
											"value": "",
											"description": "URI of the target Concept",
											"type": "text"
										},
										{
											"key": "property",
											"value": "",
											"description": "The relation type. E.g. you can choose a property like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/removeRelation",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"removeRelation"
									]
								},
								"description": "Remove a relation between two concepts. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-management-services/web-service-method--remove-relation-between-two-concepts.html)"
							},
							"response": [
								{
									"name": "Remove Related Concepts",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "sourceConcept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/807",
													"description": "URI of the source Concept",
													"type": "text"
												},
												{
													"key": "targetConcept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/805",
													"description": "URI of the target Concept",
													"type": "text"
												},
												{
													"key": "property",
													"value": "skos:related",
													"description": "The relation type. E.g. you can choose a property like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/removeRelation",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"removeRelation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 02:21:18 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										}
									],
									"cookie": [],
									"body": null
								},
								{
									"name": "Make Narrower Concepts",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "sourceConcept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/807",
													"description": "URI of the source Concept",
													"type": "text"
												},
												{
													"key": "targetConcept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/806",
													"description": "URI of the target Concept",
													"type": "text"
												},
												{
													"key": "property",
													"value": "skos:narrower",
													"description": "The relation type. E.g. you can choose a property like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/removeRelation",
											"host": [
												"{{server_url}}"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"{{project_id}}",
												"removeRelation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 02:22:29 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Delete a Concept",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "concept",
											"value": "",
											"description": "URI of the concept that should be removed. The concept cannot have any narrower concepts. String Required",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/deleteConcept",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"deleteConcept"
									]
								},
								"description": "Delete a concept if it does not have any narrower concepts. All its relations will also be deleted. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-management-services/web-service-method--delete-a-concept.html)"
							},
							"response": [
								{
									"name": "Delete a Concept",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "concept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/806",
													"description": "URI of the concept that should be removed. The concept cannot have any narrower concepts. String Required",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/deleteConcept",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"deleteConcept"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 02:30:02 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Change URI of a Concept",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "oldUri",
											"value": "",
											"description": "Existing URI - String - Required",
											"type": "text"
										},
										{
											"key": "newUri",
											"value": "",
											"description": "New URI of the concept",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/changeUri",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"changeUri"
									]
								},
								"description": "Change the URI of a concept [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-management-services/web-service-method--change-uri-of-a-concept.html)"
							},
							"response": [
								{
									"name": "Change Concept URI",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "oldUri",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/804",
													"description": "Existing URI - String - Required",
													"type": "text"
												},
												{
													"key": "newUri",
													"value": "http://example.com/appf_test_concept/804",
													"description": "New URI of the concept",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/changeUri",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"changeUri"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 02:34:43 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"status\": 405,\n    \"message\": \"Content type 'application/x-www-form-urlencoded;charset=UTF-8' not supported\",\n    \"resultType\": \"text/plain\",\n    \"result\": \"Method Not Allowed\"\n}"
								}
							]
						}
					],
					"description": "Methods in the PoolParty Thesaurus API for concepts. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-management-services.html)\n\nStatus - Complete"
				},
				{
					"name": "Concept Scheme Management Services",
					"item": [
						{
							"name": "Create New Concept Scheme",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "title",
											"value": "",
											"description": "Title in the default language for the newly created ConceptScheme",
											"type": "text"
										},
										{
											"key": "description",
											"value": "",
											"description": "Description in the default language for the newly created ConceptScheme",
											"type": "text",
											"disabled": true
										},
										{
											"key": "subject",
											"value": "",
											"description": "Subject in the default language for the newly created ConceptScheme",
											"type": "text",
											"disabled": true
										},
										{
											"key": "creator",
											"value": "",
											"description": "Author of the newly created ConceptScheme",
											"type": "text",
											"disabled": true
										},
										{
											"key": "contributor",
											"value": "",
											"description": "Contributor of the newly created ConceptScheme",
											"type": "text",
											"disabled": true
										},
										{
											"key": "publisher",
											"value": "",
											"description": "Publisher of the newly created ConceptScheme",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/createConceptScheme",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"createConceptScheme"
									]
								},
								"description": "Create a new concept scheme [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-scheme-management-services/web-service-method--create-new-concept-scheme.html)"
							},
							"response": [
								{
									"name": "Create New Concept Scheme",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "title",
													"value": "TestConceptScheme",
													"description": "Title in the default language for the newly created ConceptScheme",
													"type": "text"
												},
												{
													"key": "description",
													"value": "",
													"description": "Description in the default language for the newly created ConceptScheme",
													"type": "text",
													"disabled": true
												},
												{
													"key": "subject",
													"value": "",
													"description": "Subject in the default language for the newly created ConceptScheme",
													"type": "text",
													"disabled": true
												},
												{
													"key": "creator",
													"value": "",
													"description": "Author of the newly created ConceptScheme",
													"type": "text",
													"disabled": true
												},
												{
													"key": "contributor",
													"value": "",
													"description": "Contributor of the newly created ConceptScheme",
													"type": "text",
													"disabled": true
												},
												{
													"key": "publisher",
													"value": "",
													"description": "Publisher of the newly created ConceptScheme",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/createConceptScheme",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"createConceptScheme"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 03:57:28 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Set-Cookie",
											"value": "JSESSIONID=1C7220846300B28C3325022F67DF39B5; Path=/PoolParty; Secure; HttpOnly; SameSite=Lax"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "\"http://example.com/appf_this_part_changes_with_each_scheme/808\""
								}
							]
						},
						{
							"name": "Request Concept Schemes of a Project",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/schemes",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"schemes"
									],
									"query": [
										{
											"key": "language",
											"value": "",
											"description": "Only concept schemes with labels in this language will be displayed. If no language is given, the default language of the project will be used.",
											"disabled": true
										}
									]
								},
								"description": "Return a list of concept schemes [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-scheme-management-services/web-service-method--request-concept-schemes-of-a-project.html)"
							},
							"response": []
						},
						{
							"name": "Request Top Concepts of a Concept Scheme",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/topconcepts?scheme=",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"topconcepts"
									],
									"query": [
										{
											"key": "scheme",
											"value": "",
											"description": "URI of the concept scheme"
										},
										{
											"key": "properties",
											"value": "",
											"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests.",
											"disabled": true
										},
										{
											"key": "language",
											"value": "",
											"description": "Only top concepts with labels in this language will be displayed. The default language of the project will be used if no language is given.",
											"disabled": true
										},
										{
											"key": "workflowStatus",
											"value": "",
											"description": "Set to true in case a workflow is applied and workflow status should be retrieved. Default is false. See details: Using Workflow Status Information",
											"disabled": true
										}
									]
								},
								"description": "Return a list of direct top concepts for a concept scheme [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-scheme-management-services/web-service-method--request-top-concepts-of-a-concept-scheme.html)"
							},
							"response": [
								{
									"name": "Request Top Concepts of a Concept Scheme",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/topconcepts?scheme=http://example.com/appf_methods/1",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"topconcepts"
											],
											"query": [
												{
													"key": "scheme",
													"value": "http://example.com/appf_methods/1",
													"description": "URI of the concept scheme"
												},
												{
													"key": "properties",
													"value": "",
													"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests.",
													"disabled": true
												},
												{
													"key": "language",
													"value": "",
													"description": "Only top concepts with labels in this language will be displayed. The default language of the project will be used if no language is given.",
													"disabled": true
												},
												{
													"key": "workflowStatus",
													"value": "",
													"description": "Set to true in case a workflow is applied and workflow status should be retrieved. Default is false. See details: Using Workflow Status Information",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 04:01:31 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"uri\": \"http://example.com/appf_methods/710\",\n        \"prefLabel\": \"computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/262\",\n        \"prefLabel\": \"counting\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/513\",\n        \"prefLabel\": \"measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/481\",\n        \"prefLabel\": \"estimation\"\n    }\n]"
								}
							]
						},
						{
							"name": "Request Child Concepts of Concept Schemes or Concepts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/childconcepts?parent=",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"childconcepts"
									],
									"query": [
										{
											"key": "parent",
											"value": "",
											"description": "URI of the Concept or ConceptScheme"
										},
										{
											"key": "properties",
											"value": "",
											"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests.",
											"disabled": true
										},
										{
											"key": "language",
											"value": "",
											"description": "Only narrower concepts with labels in this language will be displayed. If no language is given, the default language of the project will be used.",
											"disabled": true
										},
										{
											"key": "transitive",
											"value": "",
											"description": "If true, all transitive narrower concepts are returned instead of only direct narrower concepts.",
											"disabled": true
										},
										{
											"key": "workflowStatus",
											"value": "",
											"description": "Set to true in case a workflow is applied and workflow status should be retrieved. Default is false. See details: Using Workflow Status Information",
											"disabled": true
										}
									]
								},
								"description": "Return a list of narrower concepts of a given concept or concept scheme [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-scheme-management-services/web-service-method--request-child-concepts-of-concept-schemes-or-concepts.html)"
							},
							"response": [
								{
									"name": "No Transitive",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/childconcepts?parent=http://example.com/appf_methods/1",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"childconcepts"
											],
											"query": [
												{
													"key": "parent",
													"value": "http://example.com/appf_methods/1",
													"description": "URI of the Concept or ConceptScheme"
												},
												{
													"key": "properties",
													"value": "",
													"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests.",
													"disabled": true
												},
												{
													"key": "language",
													"value": "",
													"description": "Only narrower concepts with labels in this language will be displayed. If no language is given, the default language of the project will be used.",
													"disabled": true
												},
												{
													"key": "transitive",
													"value": "",
													"description": "If true, all transitive narrower concepts are returned instead of only direct narrower concepts.",
													"disabled": true
												},
												{
													"key": "workflowStatus",
													"value": "",
													"description": "Set to true in case a workflow is applied and workflow status should be retrieved. Default is false. See details: Using Workflow Status Information",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 04:04:44 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"uri\": \"http://example.com/appf_methods/710\",\n        \"prefLabel\": \"computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/262\",\n        \"prefLabel\": \"counting\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/513\",\n        \"prefLabel\": \"measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/481\",\n        \"prefLabel\": \"estimation\"\n    }\n]"
								},
								{
									"name": "With Transitive",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/childconcepts?parent=http://example.com/appf_methods/1&transitive=true",
											"host": [
												"{{server_url}}"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"{{project_id}}",
												"childconcepts"
											],
											"query": [
												{
													"key": "parent",
													"value": "http://example.com/appf_methods/1",
													"description": "URI of the Concept or ConceptScheme"
												},
												{
													"key": "properties",
													"value": "",
													"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests.",
													"disabled": true
												},
												{
													"key": "language",
													"value": "",
													"description": "Only narrower concepts with labels in this language will be displayed. If no language is given, the default language of the project will be used.",
													"disabled": true
												},
												{
													"key": "transitive",
													"value": "true",
													"description": "If true, all transitive narrower concepts are returned instead of only direct narrower concepts."
												},
												{
													"key": "workflowStatus",
													"value": "",
													"description": "Set to true in case a workflow is applied and workflow status should be retrieved. Default is false. See details: Using Workflow Status Information",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 04:05:10 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"uri\": \"http://example.com/appf_methods/780\",\n        \"prefLabel\": \"relative smoothed PSA growth rate over a time interval_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/531\",\n        \"prefLabel\": \"number of unripe fruit_counting\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/498\",\n        \"prefLabel\": \"spider mites leaf damage_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/773\",\n        \"prefLabel\": \"relative PSA growth rate for a single time point_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/499\",\n        \"prefLabel\": \"aphids leaf damage_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/774\",\n        \"prefLabel\": \"absolute PSA growth rates over a time interval_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/775\",\n        \"prefLabel\": \"relative PSA growth rate over a time interval_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/776\",\n        \"prefLabel\": \"smoothed projected shoot area for a single time point_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/262\",\n        \"prefLabel\": \"counting\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/777\",\n        \"prefLabel\": \"absolute smoothed PSA growth rates for a single time point_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/778\",\n        \"prefLabel\": \"relative smoothed PSA growth rate for a single time point_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/779\",\n        \"prefLabel\": \"absolute smoothed PSA growth rates over a time interval_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/543\",\n        \"prefLabel\": \"number of seeds_counting\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/544\",\n        \"prefLabel\": \"seed shape_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/545\",\n        \"prefLabel\": \"seed volume_measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/546\",\n        \"prefLabel\": \"seed length_measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/710\",\n        \"prefLabel\": \"computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/711\",\n        \"prefLabel\": \"seed number_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/712\",\n        \"prefLabel\": \"seed blob size_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/713\",\n        \"prefLabel\": \"seed attenuation mean value_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/714\",\n        \"prefLabel\": \"seed spherical ratio_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/715\",\n        \"prefLabel\": \"seed spherical ratio spherical radius_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/716\",\n        \"prefLabel\": \"seed spherical ratio sphere MCS radius_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/717\",\n        \"prefLabel\": \"seed density mean value_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/718\",\n        \"prefLabel\": \"seed center of mass X/Y/Z_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/719\",\n        \"prefLabel\": \"seed MCS radius_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/720\",\n        \"prefLabel\": \"seed MCS center X/Y/Z_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/721\",\n        \"prefLabel\": \"seed number of surface voxel_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/722\",\n        \"prefLabel\": \"seed blob size cubic millimeter_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/723\",\n        \"prefLabel\": \"seed ratio surface to blob voxel_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/724\",\n        \"prefLabel\": \"seed length_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/725\",\n        \"prefLabel\": \"seed weight_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/726\",\n        \"prefLabel\": \"seed surface area_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/727\",\n        \"prefLabel\": \"seed volume_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/728\",\n        \"prefLabel\": \"seed structural similarity_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/729\",\n        \"prefLabel\": \"seed class_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/730\",\n        \"prefLabel\": \"spike seed number_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/731\",\n        \"prefLabel\": \"spike seed weight total_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/732\",\n        \"prefLabel\": \"spike seed weight average_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/733\",\n        \"prefLabel\": \"spike seed weight average standard deviation_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/734\",\n        \"prefLabel\": \"spike seed shape_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/735\",\n        \"prefLabel\": \"spike seed length_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/736\",\n        \"prefLabel\": \"spike seed length standard deviation_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/737\",\n        \"prefLabel\": \"spike CAT radius_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/738\",\n        \"prefLabel\": \"spike CAT radius standard deviation_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/739\",\n        \"prefLabel\": \"spike seed size_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/750\",\n        \"prefLabel\": \"spike seed class percentage_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/740\",\n        \"prefLabel\": \"spike seed size standard deviation_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/741\",\n        \"prefLabel\": \"spike seed surface area_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/500\",\n        \"prefLabel\": \"thrips leaf damage_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/742\",\n        \"prefLabel\": \"spike surface area standard deviation_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/501\",\n        \"prefLabel\": \"whitefly leaf damage_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/743\",\n        \"prefLabel\": \"spike seed ratio surface to volume_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/502\",\n        \"prefLabel\": \"insect leaf damage_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/744\",\n        \"prefLabel\": \"spike seed mean gray value_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/503\",\n        \"prefLabel\": \"Botrytis cinerea infection_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/745\",\n        \"prefLabel\": \"spike seed mean gray value standard deviation_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/504\",\n        \"prefLabel\": \"Powdery mildew infection_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/746\",\n        \"prefLabel\": \"spike seed ear X_measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/505\",\n        \"prefLabel\": \"Leaf rust infection_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/747\",\n        \"prefLabel\": \"spike seed ear Y_measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/506\",\n        \"prefLabel\": \"Fusarium infection_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/748\",\n        \"prefLabel\": \"spike seed ear Z_measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/507\",\n        \"prefLabel\": \"leaf colour gradient _estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/749\",\n        \"prefLabel\": \"spike seed ear length_measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/508\",\n        \"prefLabel\": \"mature leaf colour_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/509\",\n        \"prefLabel\": \"Nitrogen deficiency_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/481\",\n        \"prefLabel\": \"estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/760\",\n        \"prefLabel\": \"soil ammonia concentration_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/761\",\n        \"prefLabel\": \"soil nitrogen concentration_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/751\",\n        \"prefLabel\": \"fresh shoot weight_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/510\",\n        \"prefLabel\": \"Phosphorus deficiency_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/752\",\n        \"prefLabel\": \"dry shoot weight_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/511\",\n        \"prefLabel\": \"Phosphorus toxicity_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/753\",\n        \"prefLabel\": \"fresh root weight_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/512\",\n        \"prefLabel\": \"root architecture_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/754\",\n        \"prefLabel\": \"dry root weight_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/513\",\n        \"prefLabel\": \"measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/755\",\n        \"prefLabel\": \"total fresh weight_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/514\",\n        \"prefLabel\": \"nutrient feeding events_measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/756\",\n        \"prefLabel\": \"total dry weight_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/757\",\n        \"prefLabel\": \"yield_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/516\",\n        \"prefLabel\": \"plant height_measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/758\",\n        \"prefLabel\": \"harvest index_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/517\",\n        \"prefLabel\": \"average branch length_measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/759\",\n        \"prefLabel\": \"soil nitrate concentration_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/518\",\n        \"prefLabel\": \"maximal plant width_measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/519\",\n        \"prefLabel\": \"width of the main stem at base_measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/494\",\n        \"prefLabel\": \"flower development_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/495\",\n        \"prefLabel\": \"flower maturity_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/770\",\n        \"prefLabel\": \"relative smoothed PSA growth rate_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/496\",\n        \"prefLabel\": \"overall stature_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/771\",\n        \"prefLabel\": \"projected shoot area for a single time point_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/530\",\n        \"prefLabel\": \"number of ripe fruit_counting\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/497\",\n        \"prefLabel\": \"growth stages_estimation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/772\",\n        \"prefLabel\": \"absolute PSA growth rates for a single time point_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/520\",\n        \"prefLabel\": \"harvest weight_measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/762\",\n        \"prefLabel\": \"projected shoot area _computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/521\",\n        \"prefLabel\": \"lab nutrient content results_measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/763\",\n        \"prefLabel\": \"absolute PSA growth  rates_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/522\",\n        \"prefLabel\": \"lab primary metabolite results_measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/764\",\n        \"prefLabel\": \"relative PSA growth rate_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/523\",\n        \"prefLabel\": \"lab elemental composition results_measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/765\",\n        \"prefLabel\": \"daily water use_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/524\",\n        \"prefLabel\": \"leaf fluorescence_measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/766\",\n        \"prefLabel\": \"total water use_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/525\",\n        \"prefLabel\": \"total amound of carbon fixed by plant_measurement\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/767\",\n        \"prefLabel\": \"water use index_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/526\",\n        \"prefLabel\": \"ramification points along stem_counting\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/768\",\n        \"prefLabel\": \"smoothed projected shoot area_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/527\",\n        \"prefLabel\": \"ramification points along branch_counting\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/769\",\n        \"prefLabel\": \"absolute smoothed PSA growth rates_computation\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/528\",\n        \"prefLabel\": \"number of leaves_counting\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_methods/529\",\n        \"prefLabel\": \"number of flowers_counting\"\n    }\n]"
								}
							]
						},
						{
							"name": "Request Paths Between Concept and Concept Schemes",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/paths?concept=",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"paths"
									],
									"query": [
										{
											"key": "concept",
											"value": "",
											"description": "URI of the concept"
										},
										{
											"key": "properties",
											"value": "",
											"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests.",
											"disabled": true
										},
										{
											"key": "language",
											"value": "",
											"description": "Only labels and titles in selected language will be displayed.",
											"disabled": true
										},
										{
											"key": "defaultLanguageAsFallback",
											"value": "",
											"description": "If nolanguageis given, the defaultlanguageof the project will be used.\n\nThe default value isfalse.",
											"disabled": true
										},
										{
											"key": "workflowStatus",
											"value": "",
											"description": "Include workflow status information.\n\nThe default value is false.",
											"disabled": true
										}
									]
								},
								"description": "Return a list of all existing paths between the requested concept and all concept schemes it is located in. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-scheme-management-services/web-service-method--request-paths-between-concept-and-concept-schemes.html)"
							},
							"response": [
								{
									"name": "Request Concept Paths",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/paths?concept=http://example.com/appf_methods/763",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"paths"
											],
											"query": [
												{
													"key": "concept",
													"value": "http://example.com/appf_methods/763",
													"description": "URI of the concept"
												},
												{
													"key": "properties",
													"value": "",
													"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests.",
													"disabled": true
												},
												{
													"key": "language",
													"value": "",
													"description": "Only labels and titles in selected language will be displayed.",
													"disabled": true
												},
												{
													"key": "defaultLanguageAsFallback",
													"value": "",
													"description": "If nolanguageis given, the defaultlanguageof the project will be used.\n\nThe default value isfalse.",
													"disabled": true
												},
												{
													"key": "workflowStatus",
													"value": "",
													"description": "Include workflow status information.\n\nThe default value is false.",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 04:35:20 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"conceptScheme\": {\n            \"uri\": \"http://example.com/appf_methods/1\",\n            \"title\": \"Method\"\n        },\n        \"conceptPath\": [\n            {\n                \"uri\": \"http://example.com/appf_methods/710\",\n                \"prefLabel\": \"computation\"\n            },\n            {\n                \"uri\": \"http://example.com/appf_methods/763\",\n                \"prefLabel\": \"absolute PSA growth  rates_computation\"\n            }\n        ]\n    }\n]"
								}
							]
						},
						{
							"name": "Request Subtree of Concept or Concept Scheme",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/subtree?root=",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"subtree"
									],
									"query": [
										{
											"key": "root",
											"value": "",
											"description": "URI of the concept or concept scheme for which child nodes should be retrieved."
										},
										{
											"key": "properties",
											"value": "",
											"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests.",
											"disabled": true
										},
										{
											"key": "language",
											"value": "",
											"description": "Only narrower concepts with labels in this language will be displayed. If no language is given, the default language of the project will be used.",
											"disabled": true
										}
									]
								},
								"description": "Return a list of all narrower concepts (recursively) of a given concept or concept scheme [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-scheme-management-services/web-service-method--request-subtree-of-concept-or-concept-scheme.html)"
							},
							"response": [
								{
									"name": "Request Subtree",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/subtree?root=http://example.com/appf_methods/262",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"subtree"
											],
											"query": [
												{
													"key": "root",
													"value": "http://example.com/appf_methods/262",
													"description": "URI of the concept or concept scheme for which child nodes should be retrieved."
												},
												{
													"key": "properties",
													"value": "",
													"description": "List of concept properties that should be fetched. E.g. you can choose a list like: skos:altLabel, skos:hiddenLabel, skos:definition, skos:broader\n\nSee full list of Retrieve Properties in API Requests.",
													"disabled": true
												},
												{
													"key": "language",
													"value": "",
													"description": "Only narrower concepts with labels in this language will be displayed. If no language is given, the default language of the project will be used.",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 04:38:45 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"concept\": {\n            \"uri\": \"http://example.com/appf_methods/262\",\n            \"prefLabel\": \"counting\",\n            \"narrowers\": [\n                \"http://example.com/appf_methods/526\",\n                \"http://example.com/appf_methods/527\",\n                \"http://example.com/appf_methods/528\",\n                \"http://example.com/appf_methods/529\",\n                \"http://example.com/appf_methods/530\",\n                \"http://example.com/appf_methods/531\",\n                \"http://example.com/appf_methods/543\"\n            ],\n            \"properties\": {}\n        },\n        \"narrowers\": [\n            {\n                \"concept\": {\n                    \"uri\": \"http://example.com/appf_methods/530\",\n                    \"prefLabel\": \"number of ripe fruit_counting\",\n                    \"properties\": {}\n                }\n            },\n            {\n                \"concept\": {\n                    \"uri\": \"http://example.com/appf_methods/531\",\n                    \"prefLabel\": \"number of unripe fruit_counting\",\n                    \"properties\": {}\n                }\n            },\n            {\n                \"concept\": {\n                    \"uri\": \"http://example.com/appf_methods/529\",\n                    \"prefLabel\": \"number of flowers_counting\",\n                    \"properties\": {}\n                }\n            },\n            {\n                \"concept\": {\n                    \"uri\": \"http://example.com/appf_methods/527\",\n                    \"prefLabel\": \"ramification points along branch_counting\",\n                    \"properties\": {}\n                }\n            },\n            {\n                \"concept\": {\n                    \"uri\": \"http://example.com/appf_methods/526\",\n                    \"prefLabel\": \"ramification points along stem_counting\",\n                    \"properties\": {}\n                }\n            },\n            {\n                \"concept\": {\n                    \"uri\": \"http://example.com/appf_methods/528\",\n                    \"prefLabel\": \"number of leaves_counting\",\n                    \"properties\": {}\n                }\n            },\n            {\n                \"concept\": {\n                    \"uri\": \"http://example.com/appf_methods/543\",\n                    \"prefLabel\": \"number of seeds_counting\",\n                    \"properties\": {}\n                }\n            }\n        ]\n    }\n]"
								}
							]
						},
						{
							"name": "Delete a Concept Scheme",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "conceptScheme",
											"value": "",
											"description": "URI of concept scheme",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/deleteConceptScheme",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"deleteConceptScheme"
									]
								},
								"description": "Delete a concept scheme [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-scheme-management-services/web-service-method--delete-a-concept-scheme.html)"
							},
							"response": [
								{
									"name": "Delete Concept Scheme",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "conceptScheme",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/808",
													"description": "URI of concept scheme",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/deleteConceptScheme",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"deleteConceptScheme"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 04:41:47 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						}
					],
					"description": "Methods in the PoolParty Thesaurus APIs for managing Concept Scheme [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/concept-scheme-management-services.html)\n\nStatus - Complete"
				},
				{
					"name": "Notes Services",
					"item": [
						{
							"name": "Create a New Note for a Concept",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "concept",
											"value": "",
											"description": "URI of the concept that should get the note.",
											"type": "text"
										},
										{
											"key": "title",
											"value": "",
											"description": "Title of the note",
											"type": "text"
										},
										{
											"key": "comment",
											"value": "",
											"description": "Comment of the note",
											"type": "text"
										},
										{
											"key": "type",
											"value": "",
											"description": "Type of the note. Can be either historyNote, changeNote or editorialNote",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/createNote",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"createNote"
									]
								},
								"description": "Create a new note for a concept. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/notes-services/web-service-method--create-a-new-note-for-a-concept.html)"
							},
							"response": [
								{
									"name": "Create a New Note for a Concept",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "concept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/810",
													"description": "URI of the concept that should get the note.",
													"type": "text"
												},
												{
													"key": "title",
													"value": "Test Note",
													"description": "Title of the note",
													"type": "text"
												},
												{
													"key": "comment",
													"value": "APPN",
													"description": "Comment of the note",
													"type": "text"
												},
												{
													"key": "type",
													"value": "editorialNote",
													"description": "Type of the note. Can be either historyNote, changeNote or editorialNote",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/createNote",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"createNote"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 04:46:13 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Delete a Concept Note",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "concept",
											"value": "",
											"description": "URI of the concept",
											"type": "text"
										},
										{
											"key": "bNodeId",
											"value": "",
											"description": "Blank node ID ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/deleteNote",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"deleteNote"
									]
								},
								"description": "Delete a concept note. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/notes-services/web-service-method--delete-a-concept-note.html)"
							},
							"response": [
								{
									"name": "Delete a Concept Note",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "concept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/810",
													"description": "URI of the concept",
													"type": "text"
												},
												{
													"key": "bNodeId",
													"value": "node207",
													"description": "Blank node ID ",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/deleteNote",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"deleteNote"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 04:50:28 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Request Concept Notes",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/notes?concept=",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"notes"
									],
									"query": [
										{
											"key": "concept",
											"value": "",
											"description": "URI of the concept"
										}
									]
								},
								"description": "Return a list of notes of a concept. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/notes-services/web-service-method--request-concept-notes.html)"
							},
							"response": [
								{
									"name": "Request Concept Notes",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/notes?concept=http://example.com/appf_this_part_changes_with_each_scheme/810",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"notes"
											],
											"query": [
												{
													"key": "concept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/810",
													"description": "URI of the concept"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 04:49:39 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"uri\": \"node207\",\n        \"title\": \"Test Note\",\n        \"comment\": \"APPN\",\n        \"created\": \"2024-08-13T04:46:13.529Z\",\n        \"creator\": \"http://editor.vocabs.ardc.edu.au/user/6a0bbca3-de48-4d88-acf8-112f8a60c90d\",\n        \"type\": \"http://www.w3.org/2004/02/skos/core#editorialNote\"\n    }\n]"
								}
							]
						}
					],
					"description": "Methods to manage notes assigned to concepts. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/notes-services.html)\n\nStatus - Complete"
				},
				{
					"name": "Suggested Concepts Services",
					"item": [
						{
							"name": "Suggest Concept",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/suggestConcept",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"suggestConcept"
									]
								},
								"description": "Suggest a new concept. Note that the concept body is JSON, the schema of which cannot be represented in postman. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/suggested-concepts-services/web-service-method--suggest-concept.html)"
							},
							"response": [
								{
									"name": "Suggest Concept",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\"prefLabels\": [\n    {\"label\": \"early growth habit\",\n    \"language\": \"en\"}\n]}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/suggestConcept",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"suggestConcept"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 04:58:49 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"uri\": \"http://example.com/appf_this_part_changes_with_each_scheme/811\"\n}"
								}
							]
						},
						{
							"name": "Suggest Multiple concepts",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/suggestConcepts",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"suggestConcepts"
									]
								},
								"description": "Suggest multiple concepts. Note that the concept body is JSON, the schema of which cannot be represented in postman. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/suggested-concepts-services/web-service-method--suggest-multiple-concepts.html)"
							},
							"response": [
								{
									"name": "Suggest Multiple Concepts",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"conceptSuggestRequests\": [\n        {\n            \"prefLabels\": [\n                {\n                    \"label\": \"Hillary Clinton\",\n                    \"language\": \"en\"\n                }\n            ],\n            \"definition\": [\n                {\n                    \"label\": \"Democratic Party presidential candidate\",\n                    \"language\": \"en\"\n                }\n            ]\n        },\n        {\n            \"prefLabels\": [\n                {\n                    \"label\": \"Donald Trump\",\n                    \"language\": \"en\"\n                }\n            ],\n            \"definition\": [\n                {\n                    \"label\": \"Republican Party presidential candidate\",\n                    \"language\": \"en\"\n                }\n            ]\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/suggestConcepts",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"suggestConcepts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 05:50:59 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Set-Cookie",
											"value": "JSESSIONID=A787394A18EB79BCBB5E2BE9E4508CB2; Path=/PoolParty; Secure; HttpOnly; SameSite=Lax"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"uri\": \"http://example.com/appf_this_part_changes_with_each_scheme/812\"\n    },\n    {\n        \"uri\": \"http://example.com/appf_this_part_changes_with_each_scheme/813\"\n    }\n]"
								}
							]
						},
						{
							"name": "Request Suggested Concepts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/suggestedConcepts",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"suggestedConcepts"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "Start index from where the suggested concepts results should be returned.",
											"disabled": true
										},
										{
											"key": "noOfConcepts",
											"value": "",
											"description": "The number of retrieved suggested concepts.",
											"disabled": true
										}
									]
								},
								"description": "Return the list of suggested concepts for the specified project. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/suggested-concepts-services/web-service-method--request-suggested-concepts-of-a-project.html)"
							},
							"response": []
						},
						{
							"name": "Request Suggested Concept",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/suggestedConcept?concept=",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"suggestedConcept"
									],
									"query": [
										{
											"key": "concept",
											"value": "",
											"description": "URI of suggested concept"
										}
									]
								},
								"description": "Return details about a selected suggested concept. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/suggested-concepts-services/web-service-method--request-suggested-concept.html)"
							},
							"response": [
								{
									"name": "Request Suggested Concept",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/suggestedConcept?concept=http://example.com/appf_this_part_changes_with_each_scheme/811",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"suggestedConcept"
											],
											"query": [
												{
													"key": "concept",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/811",
													"description": "URI of suggested concept"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 06:12:26 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"uri\": {\n        \"uri\": \"http://example.com/appf_this_part_changes_with_each_scheme/811\"\n    },\n    \"prefLabels\": [\n        {\n            \"label\": \"early growth habit\",\n            \"datatype\": {\n                \"uri\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\"\n            },\n            \"language\": \"en\"\n        }\n    ],\n    \"definitions\": [],\n    \"broaderConcepts\": [],\n    \"relatedConcepts\": [],\n    \"topConceptOf\": [],\n    \"score\": 0,\n    \"date\": \"Tue Aug 13 06:58:49 CEST 2024\",\n    \"note\": \"\"\n}"
								}
							]
						},
						{
							"name": "Delete Suggested Concept",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/suggestedConcept?uri=",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"suggestedConcept"
									],
									"query": [
										{
											"key": "uri",
											"value": "",
											"description": "URI of the concept to delete "
										}
									]
								},
								"description": "Delete a suggested concept specified by uri. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/suggested-concepts-services/web-service-method--delete-suggested-concept.html)"
							},
							"response": [
								{
									"name": "Delete Suggested Concept",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/suggestedConcept?uri=http://example.com/appf_this_part_changes_with_each_scheme/811",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"suggestedConcept"
											],
											"query": [
												{
													"key": "uri",
													"value": "http://example.com/appf_this_part_changes_with_each_scheme/811",
													"description": "URI of the concept to delete "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 06:19:14 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Delete Suggested Concepts",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/suggestedConcepts",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"suggestedConcepts"
									]
								},
								"description": "Delete multiple suggested concepts. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/suggested-concepts-services/web-service-method--delete-suggested-concepts.html)"
							},
							"response": [
								{
									"name": "Delete Multiple Concepts",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    \"http://example.com/appf_this_part_changes_with_each_scheme/813\",\n    \"http://example.com/appf_this_part_changes_with_each_scheme/812\"\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "editor.vocabs.ardc.edu.au/PoolParty/api/thesaurus/0d9c66ad-c322-4199-b3f3-1e3b71d49bf7/suggestedConcepts",
											"host": [
												"editor",
												"vocabs",
												"ardc",
												"edu",
												"au"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"0d9c66ad-c322-4199-b3f3-1e3b71d49bf7",
												"suggestedConcepts"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 06:22:14 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Update a Suggested Concept",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/suggestedConcepts?uri=",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"suggestedConcepts"
									],
									"query": [
										{
											"key": "uri",
											"value": "",
											"description": "URI of the suggested concept to be updated"
										}
									]
								},
								"description": "Update an existing sugested concept. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/suggested-concepts-services/web-service-method--update-a-suggested-concept.html)"
							},
							"response": []
						}
					],
					"description": "Methods to manage concepts that were introduced from outside PoolParty as potential future concepts.\n\nA typical use case for suggesting new concepts is the extension of the thesaurus for example by terms that are extracted during [Concept Extraction Service](https://help.poolparty.biz/en/developer-guide/enterprise-server-apis/entity-extractor-apis/information-extraction-services/concept-extraction-service.html).\n\nPlease find more details how PoolParty handles the [Suggested Concepts Workflow](https://help.poolparty.biz/en/user-guide-for-knowledge-engineers/enterprise-features/the-workflow-dashboard/suggested-concepts-workflow.html).\n\n[Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/suggested-concepts-services.html)\n\nStatus - Complete"
				},
				{
					"name": "Generic Resource Services",
					"item": [
						{
							"name": "Request All Properties of a Resource",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/getProperties?resource=",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"getProperties"
									],
									"query": [
										{
											"key": "resource",
											"value": "",
											"description": "URI of the resource"
										}
									]
								}
							},
							"response": [
								{
									"name": "Request All Properties of a Resource",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/getProperties?resource=http://example.com/appf_methods/1",
											"host": [
												"{{server_url}}"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"{{project_id}}",
												"getProperties"
											],
											"query": [
												{
													"key": "resource",
													"value": "http://example.com/appf_methods/1",
													"description": "URI of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 06:30:48 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"resource\": {\n        \"uri\": \"http://example.com/appf_methods/1\"\n    },\n    \"properties\": [\n        {\n            \"uri\": \"http://www.w3.org/2004/02/skos/core#hasTopConcept\"\n        },\n        {\n            \"uri\": \"http://purl.org/dc/terms/modified\"\n        },\n        {\n            \"uri\": \"http://purl.org/dc/terms/created\"\n        },\n        {\n            \"uri\": \"http://purl.org/dc/terms/title\"\n        },\n        {\n            \"uri\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Request Property Values of a Resource",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/getPropertyValues?resource=&property=",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"getPropertyValues"
									],
									"query": [
										{
											"key": "resource",
											"value": "",
											"description": "URI of the resource"
										},
										{
											"key": "property",
											"value": "",
											"description": "URI of the property"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get Top Concepts",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/getPropertyValues?resource=http://example.com/appf_methods/1&property=http://www.w3.org/2004/02/skos/core%23hasTopConcept",
											"host": [
												"{{server_url}}"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"{{project_id}}",
												"getPropertyValues"
											],
											"query": [
												{
													"key": "resource",
													"value": "http://example.com/appf_methods/1",
													"description": "URI of the resource"
												},
												{
													"key": "property",
													"value": "http://www.w3.org/2004/02/skos/core#hasTopConcept",
													"description": "URI of the property"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 06:33:41 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"resource\": {\n        \"uri\": \"http://example.com/appf_methods/1\"\n    },\n    \"property\": {\n        \"uri\": \"http://www.w3.org/2004/02/skos/core#hasTopConcept\"\n    },\n    \"values\": [\n        {\n            \"uri\": \"http://example.com/appf_methods/262\"\n        },\n        {\n            \"uri\": \"http://example.com/appf_methods/481\"\n        },\n        {\n            \"uri\": \"http://example.com/appf_methods/513\"\n        },\n        {\n            \"uri\": \"http://example.com/appf_methods/710\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Request Types of a Resource",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/getTypes?resource=",
									"host": [
										"{{server_url}}"
									],
									"path": [
										"PoolParty",
										"api",
										"thesaurus",
										"{{project_id}}",
										"getTypes"
									],
									"query": [
										{
											"key": "resource",
											"value": "",
											"description": "URI of the resource"
										}
									]
								}
							},
							"response": [
								{
									"name": "Check type of a concept scheme",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{server_url}}/PoolParty/api/thesaurus/{{project_id}}/getTypes?resource=http://example.com/appf_methods/1",
											"host": [
												"{{server_url}}"
											],
											"path": [
												"PoolParty",
												"api",
												"thesaurus",
												"{{project_id}}",
												"getTypes"
											],
											"query": [
												{
													"key": "resource",
													"value": "http://example.com/appf_methods/1",
													"description": "URI of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Aug 2024 06:36:40 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self'"
										},
										{
											"key": "Vary",
											"value": "origin,access-control-request-method,access-control-request-headers,accept-encoding"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31556927;includeSubDomains"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15768000"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"resource\": {\n        \"uri\": \"http://example.com/appf_methods/1\"\n    },\n    \"rdfTypes\": [\n        {\n            \"uri\": \"http://www.w3.org/2004/02/skos/core#ConceptScheme\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"description": "Generic retrieval of RDF data. You can collect data from resources like skos:concept, skos:conceptScheme or even skos:collection. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services/generic-resource-services.html)\n\nStatus - Complete"
				}
			],
			"description": "The Thesaurus Services allow you to access and edit the data of your thesaurus programmatically. [Source](https://help.poolparty.biz/en/developer-guide/basic---advanced-server-apis/thesaurus---ontology-manager-api/thesaurus-services.html)\n\nStatus - Complete"
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{username}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}